openapi: "3.0.0"
info:
  version: 1.0.0
  title: Employee API
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api/v1
paths:
  /employee:
    post:
      summary: Create an employee
      operationId: createEmployee
      tags:
        - employee
      requestBody:
        description: Employee data to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        "201":
          description: Update status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-router-controller: "employeeController"
  /employee/{employeeId}:
    get:
      summary: Info for a specific employee
      operationId: showEmployeeById
      tags:
        - employee
      parameters:
        - name: employeeId
          in: path
          required: true
          description: The id of the employee to retrieve
          schema:
            type: integer
      responses:
        "200":
          description: Employee Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "404":
          description: Employee Not Found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-router-controller: "employeeController"
    put:
      description: updates an employee based on its employeeId
      operationId: updateEmployee
      parameters:
        - name: employeerId
          in: path
          description: ID of employee to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Employee to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        "200":
          description: employee updated
        "404":
          description: employee not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-router-controller: "customerController"
    delete:
      description: deletes a single employee based on the ID supplied
      operationId: deleteEmployee
      parameters:
        - name: employeeId
          in: path
          required: true
          description: The id of the employee to delete
          schema:
            type: integer
      responses:
        "204":
          description: Employee Deleted
        "404":
          description: Employee not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-router-controller: "employeeController"
components:
  schemas:
    Employee:
      required:
        - name
        - address
        - city
        - state
        - country
        - postal
        - birth
        - active
        - company
        - device
      properties:
        _id:
          type: string
        name:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        company:
          type: string
        postal:
          type: string
        birth:
          type: string
        active:
          type: boolean
        device:
          type: string
    # Customers:
    #   type: array
    #   items:
    #     $ref: "#/components/schemas/Customer"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string